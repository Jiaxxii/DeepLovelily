
Galgame 中 鼠标点击可以快速越过一段对话
假如有这么一个场景：
    场景1黑屏淡入，角色1从左向右移出，对话框显示对话，背景音乐开始播放，角色的台词开始播放
    一般在 Galgame 中我们想到下一个(或者说下一句台词)一般有两种做法:
        1.可以直接点击鼠标来“跳过”上面这些行为
        2.等这些行为自动播放完毕（比如角色台词播放结束 或 背景移动结束等）
        
    这样我自称这种 允许用户通过鼠标点击（用户行为）来跳过的行为为 ———— 行为流
    
行为流的实现:
    比如我们将以下描述定义为行为流
    “场景1黑屏淡入，角色1从左向右移出，对话框显示对话，背景音乐开始播放，角色的台词开始播放”
    
    1.场景1 黑屏淡入的 起始值 与 结束值 与 时间
    2.角色1 从左向右移动的 其实值 与 结束值 与 时间
    3，显示对话框的时间 与文本打字机效果的时间
    4.背景音乐播放的时间
    5.台词播放的时间
    
    首先我们应该找出这些行为中 时间 最长 的行为，
        A.场景1 的载入 我们假设遮罩 Alpha 在 1 秒 内 1 to 0
        B.角色1 的移动我们假设 x 在 2 秒内 -100 to 100 的位置  
        C.显示对话框我们假设需要再 B 完成之后在 0.6 秒内 Alpha 0 to 1，然后在 3 秒内完成打字机效果
        D.背景音乐播放即可
        E.播放台词的时间需要再 C 的对话框显示完成时播放
    这个例子中我们可以不计算一些时间，比如背景音乐的时长我们不应该计算，包括台词播放的时长我们也不需要关心，那么很明显，耗时最长的行为是 C。
    这样我们就取这个 行为流的最长时间是 5.6s = B(2s) + C(0.6s) + C(3s)
    
    执行关系:
        A 直接执行
        B 直接执行
        C 等待B结束后执行
        D 直接执行
        E C显示对话框后执行
    
    我们可以像 PR 编辑视频那样，直接执行的行为就像 PR 中一个单独的层，而像 C 这种需要等待 B 结束后执行的行为就同属于 B 图层并且排序在 B 之后
    这样我们不难发现，图层的多少取决于需要直接执行的行为的总数，而行为依赖其他行为（如需要等待某行为结束）的行为就是该行为的同图层（轨道）的项目
    这样我们只需要修改时间（更新进度）就可以做到一次行为流
    
    这样我们需要一个类，这个类表示了一条轨道，轨道上可以在不同时间点放置不同的行为，而这个类需要提供一个方法或者属性来根据传入的时间来选择轨道上的行为并且更新其值
    
    总结: 我们既然可以通过 PR 来制作出 Galgame 游戏表现，那么我们就可以定义一个类来模仿 PR 剪辑来控制游戏的行为流，就像我能将 Galgame 中的内容在 PR 中实现那么我
    的 Galgame 就可以模仿 PR 剪辑的流程来制作
    

    